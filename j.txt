processGrammar: 2.661ms
buildLRAutomaton: 945.629ms
buildAugmentedGrammar: 37.294ms
computeLookaheads: 6.756s
unionLookaheads: 437.863ms
buildParseTable: 30.893ms
computeDefaultActions: 1.764ms
{
  Root: Nonterminal {
    symbol: 'Root',
    productions: [
      Production {
        symbol: 'Root',
        handle: [ '' ],
        id: 1,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Root',
        handle: [ 'Body' ],
        id: 2,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [ '$end' ],
    nullable: false
  },
  Body: Nonterminal {
    symbol: 'Body',
    productions: [
      Production {
        symbol: 'Body',
        handle: [ 'Line' ],
        id: 3,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Body',
        handle: [ 'Body', 'TERMINATOR', 'Line' ],
        id: 4,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Body',
        handle: [ 'Body', 'TERMINATOR' ],
        id: 5,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Line: Nonterminal {
    symbol: 'Line',
    productions: [
      Production {
        symbol: 'Line',
        handle: [ 'Expression' ],
        id: 6,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Line',
        handle: [ 'ExpressionLine' ],
        id: 7,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Line',
        handle: [ 'Statement' ],
        id: 8,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Line',
        handle: [ 'FuncDirective' ],
        id: 9,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  FuncDirective: Nonterminal {
    symbol: 'FuncDirective',
    productions: [
      Production {
        symbol: 'FuncDirective',
        handle: [ 'YieldReturn' ],
        id: 10,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'FuncDirective',
        handle: [ 'AwaitReturn' ],
        id: 11,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Statement: Nonterminal {
    symbol: 'Statement',
    productions: [
      Production {
        symbol: 'Statement',
        handle: [ 'Return' ],
        id: 12,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Statement',
        handle: [ 'STATEMENT' ],
        id: 13,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Statement',
        handle: [ 'Import' ],
        id: 14,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Statement',
        handle: [ 'Export' ],
        id: 15,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Expression: Nonterminal {
    symbol: 'Expression',
    productions: [
      Production {
        symbol: 'Expression',
        handle: [ 'Value' ],
        id: 16,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Code' ],
        id: 17,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Operation' ],
        id: 18,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Assign' ],
        id: 19,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'If' ],
        id: 20,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Try' ],
        id: 21,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'While' ],
        id: 22,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'For' ],
        id: 23,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Switch' ],
        id: 24,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Class' ],
        id: 25,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Throw' ],
        id: 26,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Expression',
        handle: [ 'Yield' ],
        id: 27,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ExpressionLine: Nonterminal {
    symbol: 'ExpressionLine',
    productions: [
      Production {
        symbol: 'ExpressionLine',
        handle: [ 'CodeLine' ],
        id: 28,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExpressionLine',
        handle: [ 'IfLine' ],
        id: 29,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExpressionLine',
        handle: [ 'OperationLine' ],
        id: 30,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Yield: Nonterminal {
    symbol: 'Yield',
    productions: [
      Production {
        symbol: 'Yield',
        handle: [ 'YIELD' ],
        id: 31,
        nullable: false,
        first: [],
        precedence: 5
      },
      Production {
        symbol: 'Yield',
        handle: [ 'YIELD', 'Expression' ],
        id: 32,
        nullable: false,
        first: [],
        precedence: 5
      },
      Production {
        symbol: 'Yield',
        handle: [ 'YIELD', 'INDENT', 'Object', 'OUTDENT' ],
        id: 33,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Yield',
        handle: [ 'YIELD', 'FROM', 'Expression' ],
        id: 34,
        nullable: false,
        first: [],
        precedence: 5
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Block: Nonterminal {
    symbol: 'Block',
    productions: [
      Production {
        symbol: 'Block',
        handle: [ 'INDENT', 'OUTDENT' ],
        id: 35,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Block',
        handle: [ 'INDENT', 'Body', 'OUTDENT' ],
        id: 36,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Identifier: Nonterminal {
    symbol: 'Identifier',
    productions: [
      Production {
        symbol: 'Identifier',
        handle: [ 'IDENTIFIER' ],
        id: 37,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Identifier',
        handle: [ 'JSX_TAG' ],
        id: 38,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Property: Nonterminal {
    symbol: 'Property',
    productions: [
      Production {
        symbol: 'Property',
        handle: [ 'PROPERTY' ],
        id: 39,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  AlphaNumeric: Nonterminal {
    symbol: 'AlphaNumeric',
    productions: [
      Production {
        symbol: 'AlphaNumeric',
        handle: [ 'NUMBER' ],
        id: 40,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AlphaNumeric',
        handle: [ 'String' ],
        id: 41,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  String: Nonterminal {
    symbol: 'String',
    productions: [
      Production {
        symbol: 'String',
        handle: [ 'STRING' ],
        id: 42,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'String',
        handle: [ 'STRING_START', 'Interpolations', 'STRING_END' ],
        id: 43,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Interpolations: Nonterminal {
    symbol: 'Interpolations',
    productions: [
      Production {
        symbol: 'Interpolations',
        handle: [ 'InterpolationChunk' ],
        id: 44,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Interpolations',
        handle: [ 'Interpolations', 'InterpolationChunk' ],
        id: 45,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  InterpolationChunk: Nonterminal {
    symbol: 'InterpolationChunk',
    productions: [
      Production {
        symbol: 'InterpolationChunk',
        handle: [ 'INTERPOLATION_START', 'Body', 'INTERPOLATION_END' ],
        id: 46,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'InterpolationChunk',
        handle: [
          'INTERPOLATION_START',
          'INDENT',
          'Body',
          'OUTDENT',
          'INTERPOLATION_END'
        ],
        id: 47,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'InterpolationChunk',
        handle: [ 'INTERPOLATION_START', 'INTERPOLATION_END' ],
        id: 48,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'InterpolationChunk',
        handle: [ 'String' ],
        id: 49,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Regex: Nonterminal {
    symbol: 'Regex',
    productions: [
      Production {
        symbol: 'Regex',
        handle: [ 'REGEX' ],
        id: 50,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Regex',
        handle: [ 'REGEX_START', 'Invocation', 'REGEX_END' ],
        id: 51,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Literal: Nonterminal {
    symbol: 'Literal',
    productions: [
      Production {
        symbol: 'Literal',
        handle: [ 'AlphaNumeric' ],
        id: 52,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'JS' ],
        id: 53,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'Regex' ],
        id: 54,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'UNDEFINED' ],
        id: 55,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'NULL' ],
        id: 56,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'BOOL' ],
        id: 57,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'INFINITY' ],
        id: 58,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Literal',
        handle: [ 'NAN' ],
        id: 59,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Assign: Nonterminal {
    symbol: 'Assign',
    productions: [
      Production {
        symbol: 'Assign',
        handle: [ 'Assignable', '=', 'Expression' ],
        id: 60,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Assign',
        handle: [ 'Assignable', '=', 'TERMINATOR', 'Expression' ],
        id: 61,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Assign',
        handle: [ 'Assignable', '=', 'INDENT', 'Expression', 'OUTDENT' ],
        id: 62,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  AssignObj: Nonterminal {
    symbol: 'AssignObj',
    productions: [
      Production {
        symbol: 'AssignObj',
        handle: [ 'ObjAssignable' ],
        id: 63,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignObj',
        handle: [ 'ObjRestValue' ],
        id: 64,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignObj',
        handle: [ 'ObjAssignable', ':', 'Expression' ],
        id: 65,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'AssignObj',
        handle: [ 'ObjAssignable', ':', 'INDENT', 'Expression', 'OUTDENT' ],
        id: 66,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'AssignObj',
        handle: [ 'SimpleObjAssignable', '=', 'Expression' ],
        id: 67,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'AssignObj',
        handle: [
          'SimpleObjAssignable',
          '=',
          'INDENT',
          'Expression',
          'OUTDENT'
        ],
        id: 68,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  SimpleObjAssignable: Nonterminal {
    symbol: 'SimpleObjAssignable',
    productions: [
      Production {
        symbol: 'SimpleObjAssignable',
        handle: [ 'Identifier' ],
        id: 69,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleObjAssignable',
        handle: [ 'Property' ],
        id: 70,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleObjAssignable',
        handle: [ 'ThisProperty' ],
        id: 71,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ObjAssignable: Nonterminal {
    symbol: 'ObjAssignable',
    productions: [
      Production {
        symbol: 'ObjAssignable',
        handle: [ 'SimpleObjAssignable' ],
        id: 72,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjAssignable',
        handle: [ '[', 'Expression', ']' ],
        id: 73,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjAssignable',
        handle: [ '@', '[', 'Expression', ']' ],
        id: 74,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjAssignable',
        handle: [ 'AlphaNumeric' ],
        id: 75,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ObjRestValue: Nonterminal {
    symbol: 'ObjRestValue',
    productions: [
      Production {
        symbol: 'ObjRestValue',
        handle: [ 'SimpleObjAssignable', '...' ],
        id: 76,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjRestValue',
        handle: [ '...', 'SimpleObjAssignable' ],
        id: 77,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjRestValue',
        handle: [ 'ObjSpreadExpr', '...' ],
        id: 78,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjRestValue',
        handle: [ '...', 'ObjSpreadExpr' ],
        id: 79,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ObjSpreadExpr: Nonterminal {
    symbol: 'ObjSpreadExpr',
    productions: [
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'ObjSpreadIdentifier' ],
        id: 80,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'Object' ],
        id: 81,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'Parenthetical' ],
        id: 82,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'Super' ],
        id: 83,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'This' ],
        id: 84,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'SUPER', 'OptFuncExist', 'Arguments' ],
        id: 85,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'DYNAMIC_IMPORT', 'Arguments' ],
        id: 86,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'SimpleObjAssignable', 'OptFuncExist', 'Arguments' ],
        id: 87,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadExpr',
        handle: [ 'ObjSpreadExpr', 'OptFuncExist', 'Arguments' ],
        id: 88,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ObjSpreadIdentifier: Nonterminal {
    symbol: 'ObjSpreadIdentifier',
    productions: [
      Production {
        symbol: 'ObjSpreadIdentifier',
        handle: [ 'SimpleObjAssignable', 'Accessor' ],
        id: 89,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ObjSpreadIdentifier',
        handle: [ 'ObjSpreadExpr', 'Accessor' ],
        id: 90,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Return: Nonterminal {
    symbol: 'Return',
    productions: [
      Production {
        symbol: 'Return',
        handle: [ 'RETURN', 'Expression' ],
        id: 91,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Return',
        handle: [ 'RETURN', 'INDENT', 'Object', 'OUTDENT' ],
        id: 92,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Return',
        handle: [ 'RETURN' ],
        id: 93,
        nullable: false,
        first: [],
        precedence: 4
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  YieldReturn: Nonterminal {
    symbol: 'YieldReturn',
    productions: [
      Production {
        symbol: 'YieldReturn',
        handle: [ 'YIELD', 'RETURN', 'Expression' ],
        id: 94,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'YieldReturn',
        handle: [ 'YIELD', 'RETURN' ],
        id: 95,
        nullable: false,
        first: [],
        precedence: 4
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  AwaitReturn: Nonterminal {
    symbol: 'AwaitReturn',
    productions: [
      Production {
        symbol: 'AwaitReturn',
        handle: [ 'AWAIT', 'RETURN', 'Expression' ],
        id: 96,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'AwaitReturn',
        handle: [ 'AWAIT', 'RETURN' ],
        id: 97,
        nullable: false,
        first: [],
        precedence: 4
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Code: Nonterminal {
    symbol: 'Code',
    productions: [
      Production {
        symbol: 'Code',
        handle: [
          'PARAM_START',
          'ParamList',
          'PARAM_END',
          'FuncGlyph',
          'Block'
        ],
        id: 98,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Code',
        handle: [ 'FuncGlyph', 'Block' ],
        id: 99,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  CodeLine: Nonterminal {
    symbol: 'CodeLine',
    productions: [
      Production {
        symbol: 'CodeLine',
        handle: [
          'PARAM_START',
          'ParamList',
          'PARAM_END',
          'FuncGlyph',
          'Line'
        ],
        id: 100,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'CodeLine',
        handle: [ 'FuncGlyph', 'Line' ],
        id: 101,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  FuncGlyph: Nonterminal {
    symbol: 'FuncGlyph',
    productions: [
      Production {
        symbol: 'FuncGlyph',
        handle: [ '->' ],
        id: 102,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'FuncGlyph',
        handle: [ '=>' ],
        id: 103,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  OptComma: Nonterminal {
    symbol: 'OptComma',
    productions: [
      Production {
        symbol: 'OptComma',
        handle: [ '' ],
        id: 104,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'OptComma',
        handle: [ ',' ],
        id: 105,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ParamList: Nonterminal {
    symbol: 'ParamList',
    productions: [
      Production {
        symbol: 'ParamList',
        handle: [ '' ],
        id: 106,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamList',
        handle: [ 'Param' ],
        id: 107,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamList',
        handle: [ 'ParamList', ',', 'Param' ],
        id: 108,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamList',
        handle: [ 'ParamList', 'OptComma', 'TERMINATOR', 'Param' ],
        id: 109,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamList',
        handle: [
          'ParamList',
          'OptComma',
          'INDENT',
          'ParamList',
          'OptComma',
          'OUTDENT'
        ],
        id: 110,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Param: Nonterminal {
    symbol: 'Param',
    productions: [
      Production {
        symbol: 'Param',
        handle: [ 'ParamVar' ],
        id: 111,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Param',
        handle: [ 'ParamVar', '...' ],
        id: 112,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Param',
        handle: [ '...', 'ParamVar' ],
        id: 113,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Param',
        handle: [ 'ParamVar', '=', 'Expression' ],
        id: 114,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Param',
        handle: [ '...' ],
        id: 115,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ParamVar: Nonterminal {
    symbol: 'ParamVar',
    productions: [
      Production {
        symbol: 'ParamVar',
        handle: [ 'Identifier' ],
        id: 116,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamVar',
        handle: [ 'ThisProperty' ],
        id: 117,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamVar',
        handle: [ 'Array' ],
        id: 118,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ParamVar',
        handle: [ 'Object' ],
        id: 119,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Splat: Nonterminal {
    symbol: 'Splat',
    productions: [
      Production {
        symbol: 'Splat',
        handle: [ 'Expression', '...' ],
        id: 120,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Splat',
        handle: [ '...', 'Expression' ],
        id: 121,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  SimpleAssignable: Nonterminal {
    symbol: 'SimpleAssignable',
    productions: [
      Production {
        symbol: 'SimpleAssignable',
        handle: [ 'Identifier' ],
        id: 122,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleAssignable',
        handle: [ 'Value', 'Accessor' ],
        id: 123,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleAssignable',
        handle: [ 'Code', 'Accessor' ],
        id: 124,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleAssignable',
        handle: [ 'ThisProperty' ],
        id: 125,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Assignable: Nonterminal {
    symbol: 'Assignable',
    productions: [
      Production {
        symbol: 'Assignable',
        handle: [ 'SimpleAssignable' ],
        id: 126,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Assignable',
        handle: [ 'Array' ],
        id: 127,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Assignable',
        handle: [ 'Object' ],
        id: 128,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Value: Nonterminal {
    symbol: 'Value',
    productions: [
      Production {
        symbol: 'Value',
        handle: [ 'Assignable' ],
        id: 129,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'Literal' ],
        id: 130,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'Parenthetical' ],
        id: 131,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'Range' ],
        id: 132,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'Invocation' ],
        id: 133,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'DoIife' ],
        id: 134,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'This' ],
        id: 135,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'Super' ],
        id: 136,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Value',
        handle: [ 'MetaProperty' ],
        id: 137,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Super: Nonterminal {
    symbol: 'Super',
    productions: [
      Production {
        symbol: 'Super',
        handle: [ 'SUPER', '.', 'Property' ],
        id: 138,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Super',
        handle: [ 'SUPER', 'INDEX_START', 'Expression', 'INDEX_END' ],
        id: 139,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Super',
        handle: [
          'SUPER',
          'INDEX_START',
          'INDENT',
          'Expression',
          'OUTDENT',
          'INDEX_END'
        ],
        id: 140,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  MetaProperty: Nonterminal {
    symbol: 'MetaProperty',
    productions: [
      Production {
        symbol: 'MetaProperty',
        handle: [ 'NEW_TARGET', '.', 'Property' ],
        id: 141,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'MetaProperty',
        handle: [ 'IMPORT_META', '.', 'Property' ],
        id: 142,
        nullable: false,
        first: [],
        precedence: 25
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Accessor: Nonterminal {
    symbol: 'Accessor',
    productions: [
      Production {
        symbol: 'Accessor',
        handle: [ '.', 'Property' ],
        id: 143,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ '?.', 'Property' ],
        id: 144,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ '::', 'Property' ],
        id: 145,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ '?::', 'Property' ],
        id: 146,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ '::' ],
        id: 147,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ '?::' ],
        id: 148,
        nullable: false,
        first: [],
        precedence: 25
      },
      Production {
        symbol: 'Accessor',
        handle: [ 'Index' ],
        id: 149,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Index: Nonterminal {
    symbol: 'Index',
    productions: [
      Production {
        symbol: 'Index',
        handle: [ 'INDEX_START', 'IndexValue', 'INDEX_END' ],
        id: 150,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Index',
        handle: [
          'INDEX_START',
          'INDENT',
          'IndexValue',
          'OUTDENT',
          'INDEX_END'
        ],
        id: 151,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Index',
        handle: [ 'INDEX_SOAK', 'Index' ],
        id: 152,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  IndexValue: Nonterminal {
    symbol: 'IndexValue',
    productions: [
      Production {
        symbol: 'IndexValue',
        handle: [ 'Expression' ],
        id: 153,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'IndexValue',
        handle: [ 'Slice' ],
        id: 154,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Object: Nonterminal {
    symbol: 'Object',
    productions: [
      Production {
        symbol: 'Object',
        handle: [ '{', 'AssignList', 'OptComma', '}' ],
        id: 155,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  AssignList: Nonterminal {
    symbol: 'AssignList',
    productions: [
      Production {
        symbol: 'AssignList',
        handle: [ '' ],
        id: 156,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignList',
        handle: [ 'AssignObj' ],
        id: 157,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignList',
        handle: [ 'AssignList', ',', 'AssignObj' ],
        id: 158,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignList',
        handle: [ 'AssignList', 'OptComma', 'TERMINATOR', 'AssignObj' ],
        id: 159,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'AssignList',
        handle: [
          'AssignList',
          'OptComma',
          'INDENT',
          'AssignList',
          'OptComma',
          'OUTDENT'
        ],
        id: 160,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Class: Nonterminal {
    symbol: 'Class',
    productions: [
      Production {
        symbol: 'Class',
        handle: [ 'CLASS' ],
        id: 161,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'Block' ],
        id: 162,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'EXTENDS', 'Expression' ],
        id: 163,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'EXTENDS', 'Expression', 'Block' ],
        id: 164,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'SimpleAssignable' ],
        id: 165,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'SimpleAssignable', 'Block' ],
        id: 166,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Class',
        handle: [ 'CLASS', 'SimpleAssignable', 'EXTENDS', 'Expression' ],
        id: 167,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Class',
        handle: [
          'CLASS',
          'SimpleAssignable',
          'EXTENDS',
          'Expression',
          'Block'
        ],
        id: 168,
        nullable: false,
        first: [],
        precedence: 4
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Import: Nonterminal {
    symbol: 'Import',
    productions: [
      Production {
        symbol: 'Import',
        handle: [ 'IMPORT', 'String' ],
        id: 169,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [ 'IMPORT', 'String', 'ASSERT', 'Object' ],
        id: 170,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [ 'IMPORT', 'ImportDefaultSpecifier', 'FROM', 'String' ],
        id: 171,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportDefaultSpecifier',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 172,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [ 'IMPORT', 'ImportNamespaceSpecifier', 'FROM', 'String' ],
        id: 173,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportNamespaceSpecifier',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 174,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [ 'IMPORT', '{', '}', 'FROM', 'String' ],
        id: 175,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT', '{',
          '}',      'FROM',
          'String', 'ASSERT',
          'Object'
        ],
        id: 176,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          '{',
          'ImportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String'
        ],
        id: 177,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          '{',
          'ImportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 178,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportDefaultSpecifier',
          ',',
          'ImportNamespaceSpecifier',
          'FROM',
          'String'
        ],
        id: 179,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportDefaultSpecifier',
          ',',
          'ImportNamespaceSpecifier',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 180,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportDefaultSpecifier',
          ',',
          '{',
          'ImportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String'
        ],
        id: 181,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Import',
        handle: [
          'IMPORT',
          'ImportDefaultSpecifier',
          ',',
          '{',
          'ImportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 182,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ImportSpecifierList: Nonterminal {
    symbol: 'ImportSpecifierList',
    productions: [
      Production {
        symbol: 'ImportSpecifierList',
        handle: [ 'ImportSpecifier' ],
        id: 183,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifierList',
        handle: [ 'ImportSpecifierList', ',', 'ImportSpecifier' ],
        id: 184,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifierList',
        handle: [
          'ImportSpecifierList',
          'OptComma',
          'TERMINATOR',
          'ImportSpecifier'
        ],
        id: 185,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifierList',
        handle: [ 'INDENT', 'ImportSpecifierList', 'OptComma', 'OUTDENT' ],
        id: 186,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'ImportSpecifierList',
        handle: [
          'ImportSpecifierList',
          'OptComma',
          'INDENT',
          'ImportSpecifierList',
          'OptComma',
          'OUTDENT'
        ],
        id: 187,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ImportSpecifier: Nonterminal {
    symbol: 'ImportSpecifier',
    productions: [
      Production {
        symbol: 'ImportSpecifier',
        handle: [ 'Identifier' ],
        id: 188,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifier',
        handle: [ 'Identifier', 'AS', 'Identifier' ],
        id: 189,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifier',
        handle: [ 'DEFAULT' ],
        id: 190,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ImportSpecifier',
        handle: [ 'DEFAULT', 'AS', 'Identifier' ],
        id: 191,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ImportDefaultSpecifier: Nonterminal {
    symbol: 'ImportDefaultSpecifier',
    productions: [
      Production {
        symbol: 'ImportDefaultSpecifier',
        handle: [ 'Identifier' ],
        id: 192,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ImportNamespaceSpecifier: Nonterminal {
    symbol: 'ImportNamespaceSpecifier',
    productions: [
      Production {
        symbol: 'ImportNamespaceSpecifier',
        handle: [ 'IMPORT_ALL', 'AS', 'Identifier' ],
        id: 193,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Export: Nonterminal {
    symbol: 'Export',
    productions: [
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', '{', '}' ],
        id: 194,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', '{', 'ExportSpecifierList', 'OptComma', '}' ],
        id: 195,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'Class' ],
        id: 196,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'Identifier', '=', 'Expression' ],
        id: 197,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'Identifier', '=', 'TERMINATOR', 'Expression' ],
        id: 198,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Export',
        handle: [
          'EXPORT',
          'Identifier',
          '=',
          'INDENT',
          'Expression',
          'OUTDENT'
        ],
        id: 199,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'DEFAULT', 'Expression' ],
        id: 200,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'DEFAULT', 'INDENT', 'Object', 'OUTDENT' ],
        id: 201,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', 'EXPORT_ALL', 'FROM', 'String' ],
        id: 202,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [
          'EXPORT',
          'EXPORT_ALL',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 203,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [ 'EXPORT', '{', '}', 'FROM', 'String' ],
        id: 204,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [
          'EXPORT', '{',
          '}',      'FROM',
          'String', 'ASSERT',
          'Object'
        ],
        id: 205,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [
          'EXPORT',
          '{',
          'ExportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String'
        ],
        id: 206,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Export',
        handle: [
          'EXPORT',
          '{',
          'ExportSpecifierList',
          'OptComma',
          '}',
          'FROM',
          'String',
          'ASSERT',
          'Object'
        ],
        id: 207,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ExportSpecifierList: Nonterminal {
    symbol: 'ExportSpecifierList',
    productions: [
      Production {
        symbol: 'ExportSpecifierList',
        handle: [ 'ExportSpecifier' ],
        id: 208,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifierList',
        handle: [ 'ExportSpecifierList', ',', 'ExportSpecifier' ],
        id: 209,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifierList',
        handle: [
          'ExportSpecifierList',
          'OptComma',
          'TERMINATOR',
          'ExportSpecifier'
        ],
        id: 210,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifierList',
        handle: [ 'INDENT', 'ExportSpecifierList', 'OptComma', 'OUTDENT' ],
        id: 211,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'ExportSpecifierList',
        handle: [
          'ExportSpecifierList',
          'OptComma',
          'INDENT',
          'ExportSpecifierList',
          'OptComma',
          'OUTDENT'
        ],
        id: 212,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ExportSpecifier: Nonterminal {
    symbol: 'ExportSpecifier',
    productions: [
      Production {
        symbol: 'ExportSpecifier',
        handle: [ 'Identifier' ],
        id: 213,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifier',
        handle: [ 'Identifier', 'AS', 'Identifier' ],
        id: 214,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifier',
        handle: [ 'Identifier', 'AS', 'DEFAULT' ],
        id: 215,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifier',
        handle: [ 'DEFAULT' ],
        id: 216,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ExportSpecifier',
        handle: [ 'DEFAULT', 'AS', 'Identifier' ],
        id: 217,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Invocation: Nonterminal {
    symbol: 'Invocation',
    productions: [
      Production {
        symbol: 'Invocation',
        handle: [ 'Value', 'OptFuncExist', 'String' ],
        id: 218,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Invocation',
        handle: [ 'Value', 'OptFuncExist', 'Arguments' ],
        id: 219,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Invocation',
        handle: [ 'SUPER', 'OptFuncExist', 'Arguments' ],
        id: 220,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Invocation',
        handle: [ 'DYNAMIC_IMPORT', 'Arguments' ],
        id: 221,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  OptFuncExist: Nonterminal {
    symbol: 'OptFuncExist',
    productions: [
      Production {
        symbol: 'OptFuncExist',
        handle: [ '' ],
        id: 222,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'OptFuncExist',
        handle: [ 'FUNC_EXIST' ],
        id: 223,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Arguments: Nonterminal {
    symbol: 'Arguments',
    productions: [
      Production {
        symbol: 'Arguments',
        handle: [ 'CALL_START', 'CALL_END' ],
        id: 224,
        nullable: false,
        first: [],
        precedence: 24
      },
      Production {
        symbol: 'Arguments',
        handle: [ 'CALL_START', 'ArgList', 'OptComma', 'CALL_END' ],
        id: 225,
        nullable: false,
        first: [],
        precedence: 24
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  This: Nonterminal {
    symbol: 'This',
    productions: [
      Production {
        symbol: 'This',
        handle: [ 'THIS' ],
        id: 226,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'This',
        handle: [ '@' ],
        id: 227,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ThisProperty: Nonterminal {
    symbol: 'ThisProperty',
    productions: [
      Production {
        symbol: 'ThisProperty',
        handle: [ '@', 'Property' ],
        id: 228,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Array: Nonterminal {
    symbol: 'Array',
    productions: [
      Production {
        symbol: 'Array',
        handle: [ '[', ']' ],
        id: 229,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Array',
        handle: [ '[', 'Elisions', ']' ],
        id: 230,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Array',
        handle: [ '[', 'ArgElisionList', 'OptElisions', ']' ],
        id: 231,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  RangeDots: Nonterminal {
    symbol: 'RangeDots',
    productions: [
      Production {
        symbol: 'RangeDots',
        handle: [ '..' ],
        id: 232,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'RangeDots',
        handle: [ '...' ],
        id: 233,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Range: Nonterminal {
    symbol: 'Range',
    productions: [
      Production {
        symbol: 'Range',
        handle: [ '[', 'Expression', 'RangeDots', 'Expression', ']' ],
        id: 234,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Range',
        handle: [ '[', 'ExpressionLine', 'RangeDots', 'Expression', ']' ],
        id: 235,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Slice: Nonterminal {
    symbol: 'Slice',
    productions: [
      Production {
        symbol: 'Slice',
        handle: [ 'Expression', 'RangeDots', 'Expression' ],
        id: 236,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Slice',
        handle: [ 'Expression', 'RangeDots' ],
        id: 237,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Slice',
        handle: [ 'ExpressionLine', 'RangeDots', 'Expression' ],
        id: 238,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Slice',
        handle: [ 'ExpressionLine', 'RangeDots' ],
        id: 239,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Slice',
        handle: [ 'RangeDots', 'Expression' ],
        id: 240,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Slice',
        handle: [ 'RangeDots' ],
        id: 241,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ArgList: Nonterminal {
    symbol: 'ArgList',
    productions: [
      Production {
        symbol: 'ArgList',
        handle: [ 'Arg' ],
        id: 242,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgList',
        handle: [ 'ArgList', ',', 'Arg' ],
        id: 243,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgList',
        handle: [ 'ArgList', 'OptComma', 'TERMINATOR', 'Arg' ],
        id: 244,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgList',
        handle: [ 'INDENT', 'ArgList', 'OptComma', 'OUTDENT' ],
        id: 245,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'ArgList',
        handle: [
          'ArgList',
          'OptComma',
          'INDENT',
          'ArgList',
          'OptComma',
          'OUTDENT'
        ],
        id: 246,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Arg: Nonterminal {
    symbol: 'Arg',
    productions: [
      Production {
        symbol: 'Arg',
        handle: [ 'Expression' ],
        id: 247,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Arg',
        handle: [ 'ExpressionLine' ],
        id: 248,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Arg',
        handle: [ 'Splat' ],
        id: 249,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Arg',
        handle: [ '...' ],
        id: 250,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ArgElisionList: Nonterminal {
    symbol: 'ArgElisionList',
    productions: [
      Production {
        symbol: 'ArgElisionList',
        handle: [ 'ArgElision' ],
        id: 251,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgElisionList',
        handle: [ 'ArgElisionList', ',', 'ArgElision' ],
        id: 252,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgElisionList',
        handle: [ 'ArgElisionList', 'OptComma', 'TERMINATOR', 'ArgElision' ],
        id: 253,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgElisionList',
        handle: [ 'INDENT', 'ArgElisionList', 'OptElisions', 'OUTDENT' ],
        id: 254,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'ArgElisionList',
        handle: [
          'ArgElisionList',
          'OptElisions',
          'INDENT',
          'ArgElisionList',
          'OptElisions',
          'OUTDENT'
        ],
        id: 255,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ArgElision: Nonterminal {
    symbol: 'ArgElision',
    productions: [
      Production {
        symbol: 'ArgElision',
        handle: [ 'Arg' ],
        id: 256,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ArgElision',
        handle: [ 'Elisions', 'Arg' ],
        id: 257,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  OptElisions: Nonterminal {
    symbol: 'OptElisions',
    productions: [
      Production {
        symbol: 'OptElisions',
        handle: [ 'OptComma' ],
        id: 258,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'OptElisions',
        handle: [ ',', 'Elisions' ],
        id: 259,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Elisions: Nonterminal {
    symbol: 'Elisions',
    productions: [
      Production {
        symbol: 'Elisions',
        handle: [ 'Elision' ],
        id: 260,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Elisions',
        handle: [ 'Elisions', 'Elision' ],
        id: 261,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Elision: Nonterminal {
    symbol: 'Elision',
    productions: [
      Production {
        symbol: 'Elision',
        handle: [ ',' ],
        id: 262,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Elision',
        handle: [ 'Elision', 'TERMINATOR' ],
        id: 263,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  SimpleArgs: Nonterminal {
    symbol: 'SimpleArgs',
    productions: [
      Production {
        symbol: 'SimpleArgs',
        handle: [ 'Expression' ],
        id: 264,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleArgs',
        handle: [ 'ExpressionLine' ],
        id: 265,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleArgs',
        handle: [ 'SimpleArgs', ',', 'Expression' ],
        id: 266,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'SimpleArgs',
        handle: [ 'SimpleArgs', ',', 'ExpressionLine' ],
        id: 267,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Try: Nonterminal {
    symbol: 'Try',
    productions: [
      Production {
        symbol: 'Try',
        handle: [ 'TRY', 'Block' ],
        id: 268,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Try',
        handle: [ 'TRY', 'Block', 'Catch' ],
        id: 269,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Try',
        handle: [ 'TRY', 'Block', 'FINALLY', 'Block' ],
        id: 270,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Try',
        handle: [ 'TRY', 'Block', 'Catch', 'FINALLY', 'Block' ],
        id: 271,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Catch: Nonterminal {
    symbol: 'Catch',
    productions: [
      Production {
        symbol: 'Catch',
        handle: [ 'CATCH', 'Identifier', 'Block' ],
        id: 272,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Catch',
        handle: [ 'CATCH', 'Object', 'Block' ],
        id: 273,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Catch',
        handle: [ 'CATCH', 'Block' ],
        id: 274,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Throw: Nonterminal {
    symbol: 'Throw',
    productions: [
      Production {
        symbol: 'Throw',
        handle: [ 'THROW', 'Expression' ],
        id: 275,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Throw',
        handle: [ 'THROW', 'INDENT', 'Object', 'OUTDENT' ],
        id: 276,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Parenthetical: Nonterminal {
    symbol: 'Parenthetical',
    productions: [
      Production {
        symbol: 'Parenthetical',
        handle: [ '(', 'Body', ')' ],
        id: 277,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Parenthetical',
        handle: [ '(', 'INDENT', 'Body', 'OUTDENT', ')' ],
        id: 278,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  WhileLineSource: Nonterminal {
    symbol: 'WhileLineSource',
    productions: [
      Production {
        symbol: 'WhileLineSource',
        handle: [ 'WHILE', 'ExpressionLine' ],
        id: 279,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'WhileLineSource',
        handle: [ 'WHILE', 'ExpressionLine', 'WHEN', 'ExpressionLine' ],
        id: 280,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'WhileLineSource',
        handle: [ 'UNTIL', 'ExpressionLine' ],
        id: 281,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'WhileLineSource',
        handle: [ 'UNTIL', 'ExpressionLine', 'WHEN', 'ExpressionLine' ],
        id: 282,
        nullable: false,
        first: [],
        precedence: 3
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  WhileSource: Nonterminal {
    symbol: 'WhileSource',
    productions: [
      Production {
        symbol: 'WhileSource',
        handle: [ 'WHILE', 'Expression' ],
        id: 283,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'WhileSource',
        handle: [ 'WHILE', 'Expression', 'WHEN', 'Expression' ],
        id: 284,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'WhileSource',
        handle: [ 'WHILE', 'ExpressionLine', 'WHEN', 'Expression' ],
        id: 285,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'WhileSource',
        handle: [ 'UNTIL', 'Expression' ],
        id: 286,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'WhileSource',
        handle: [ 'UNTIL', 'Expression', 'WHEN', 'Expression' ],
        id: 287,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'WhileSource',
        handle: [ 'UNTIL', 'ExpressionLine', 'WHEN', 'Expression' ],
        id: 288,
        nullable: false,
        first: [],
        precedence: 3
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  While: Nonterminal {
    symbol: 'While',
    productions: [
      Production {
        symbol: 'While',
        handle: [ 'WhileSource', 'Block' ],
        id: 289,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'While',
        handle: [ 'WhileLineSource', 'Block' ],
        id: 290,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'While',
        handle: [ 'Statement', 'WhileSource' ],
        id: 291,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'While',
        handle: [ 'Expression', 'WhileSource' ],
        id: 292,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'While',
        handle: [ 'Loop' ],
        id: 293,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Loop: Nonterminal {
    symbol: 'Loop',
    productions: [
      Production {
        symbol: 'Loop',
        handle: [ 'LOOP', 'Block' ],
        id: 294,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'Loop',
        handle: [ 'LOOP', 'Expression' ],
        id: 295,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  For: Nonterminal {
    symbol: 'For',
    productions: [
      Production {
        symbol: 'For',
        handle: [ 'Statement', 'ForBody' ],
        id: 296,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'For',
        handle: [ 'Expression', 'ForBody' ],
        id: 297,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'For',
        handle: [ 'ForBody', 'Block' ],
        id: 298,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'For',
        handle: [ 'ForLineBody', 'Block' ],
        id: 299,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForBody: Nonterminal {
    symbol: 'ForBody',
    productions: [
      Production {
        symbol: 'ForBody',
        handle: [ 'FOR', 'Range' ],
        id: 300,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'ForBody',
        handle: [ 'FOR', 'Range', 'BY', 'Expression' ],
        id: 301,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForBody',
        handle: [ 'ForStart', 'ForSource' ],
        id: 302,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForLineBody: Nonterminal {
    symbol: 'ForLineBody',
    productions: [
      Production {
        symbol: 'ForLineBody',
        handle: [ 'FOR', 'Range', 'BY', 'ExpressionLine' ],
        id: 303,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineBody',
        handle: [ 'ForStart', 'ForLineSource' ],
        id: 304,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForStart: Nonterminal {
    symbol: 'ForStart',
    productions: [
      Production {
        symbol: 'ForStart',
        handle: [ 'FOR', 'ForVariables' ],
        id: 305,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'ForStart',
        handle: [ 'FOR', 'AWAIT', 'ForVariables' ],
        id: 306,
        nullable: false,
        first: [],
        precedence: 20
      },
      Production {
        symbol: 'ForStart',
        handle: [ 'FOR', 'OWN', 'ForVariables' ],
        id: 307,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForValue: Nonterminal {
    symbol: 'ForValue',
    productions: [
      Production {
        symbol: 'ForValue',
        handle: [ 'Identifier' ],
        id: 308,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ForValue',
        handle: [ 'ThisProperty' ],
        id: 309,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ForValue',
        handle: [ 'Array' ],
        id: 310,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ForValue',
        handle: [ 'Object' ],
        id: 311,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForVariables: Nonterminal {
    symbol: 'ForVariables',
    productions: [
      Production {
        symbol: 'ForVariables',
        handle: [ 'ForValue' ],
        id: 312,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'ForVariables',
        handle: [ 'ForValue', ',', 'ForValue' ],
        id: 313,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForSource: Nonterminal {
    symbol: 'ForSource',
    productions: [
      Production {
        symbol: 'ForSource',
        handle: [ 'FORIN', 'Expression' ],
        id: 314,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FOROF', 'Expression' ],
        id: 315,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORIN', 'Expression', 'WHEN', 'Expression' ],
        id: 316,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORIN', 'ExpressionLine', 'WHEN', 'Expression' ],
        id: 317,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FOROF', 'Expression', 'WHEN', 'Expression' ],
        id: 318,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FOROF', 'ExpressionLine', 'WHEN', 'Expression' ],
        id: 319,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORIN', 'Expression', 'BY', 'Expression' ],
        id: 320,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORIN', 'ExpressionLine', 'BY', 'Expression' ],
        id: 321,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'Expression',
          'WHEN',
          'Expression',
          'BY',
          'Expression'
        ],
        id: 322,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'WHEN',
          'Expression',
          'BY',
          'Expression'
        ],
        id: 323,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'Expression',
          'WHEN',
          'ExpressionLine',
          'BY',
          'Expression'
        ],
        id: 324,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'WHEN',
          'ExpressionLine',
          'BY',
          'Expression'
        ],
        id: 325,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'Expression',
          'BY',
          'Expression',
          'WHEN',
          'Expression'
        ],
        id: 326,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'BY',
          'Expression',
          'WHEN',
          'Expression'
        ],
        id: 327,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'Expression',
          'BY',
          'ExpressionLine',
          'WHEN',
          'Expression'
        ],
        id: 328,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'BY',
          'ExpressionLine',
          'WHEN',
          'Expression'
        ],
        id: 329,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORFROM', 'Expression' ],
        id: 330,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORFROM', 'Expression', 'WHEN', 'Expression' ],
        id: 331,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForSource',
        handle: [ 'FORFROM', 'ExpressionLine', 'WHEN', 'Expression' ],
        id: 332,
        nullable: false,
        first: [],
        precedence: 3
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  ForLineSource: Nonterminal {
    symbol: 'ForLineSource',
    productions: [
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORIN', 'ExpressionLine' ],
        id: 333,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FOROF', 'ExpressionLine' ],
        id: 334,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORIN', 'Expression', 'WHEN', 'ExpressionLine' ],
        id: 335,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORIN', 'ExpressionLine', 'WHEN', 'ExpressionLine' ],
        id: 336,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FOROF', 'Expression', 'WHEN', 'ExpressionLine' ],
        id: 337,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FOROF', 'ExpressionLine', 'WHEN', 'ExpressionLine' ],
        id: 338,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORIN', 'Expression', 'BY', 'ExpressionLine' ],
        id: 339,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORIN', 'ExpressionLine', 'BY', 'ExpressionLine' ],
        id: 340,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'Expression',
          'WHEN',
          'Expression',
          'BY',
          'ExpressionLine'
        ],
        id: 341,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'WHEN',
          'Expression',
          'BY',
          'ExpressionLine'
        ],
        id: 342,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'Expression',
          'WHEN',
          'ExpressionLine',
          'BY',
          'ExpressionLine'
        ],
        id: 343,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'WHEN',
          'ExpressionLine',
          'BY',
          'ExpressionLine'
        ],
        id: 344,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'Expression',
          'BY',
          'Expression',
          'WHEN',
          'ExpressionLine'
        ],
        id: 345,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'BY',
          'Expression',
          'WHEN',
          'ExpressionLine'
        ],
        id: 346,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'Expression',
          'BY',
          'ExpressionLine',
          'WHEN',
          'ExpressionLine'
        ],
        id: 347,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [
          'FORIN',
          'ExpressionLine',
          'BY',
          'ExpressionLine',
          'WHEN',
          'ExpressionLine'
        ],
        id: 348,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORFROM', 'ExpressionLine' ],
        id: 349,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORFROM', 'Expression', 'WHEN', 'ExpressionLine' ],
        id: 350,
        nullable: false,
        first: [],
        precedence: 3
      },
      Production {
        symbol: 'ForLineSource',
        handle: [ 'FORFROM', 'ExpressionLine', 'WHEN', 'ExpressionLine' ],
        id: 351,
        nullable: false,
        first: [],
        precedence: 3
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Switch: Nonterminal {
    symbol: 'Switch',
    productions: [
      Production {
        symbol: 'Switch',
        handle: [ 'SWITCH', 'Expression', 'INDENT', 'Whens', 'OUTDENT' ],
        id: 352,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Switch',
        handle: [ 'SWITCH', 'ExpressionLine', 'INDENT', 'Whens', 'OUTDENT' ],
        id: 353,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Switch',
        handle: [
          'SWITCH',
          'Expression',
          'INDENT',
          'Whens',
          'ELSE',
          'Block',
          'OUTDENT'
        ],
        id: 354,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Switch',
        handle: [
          'SWITCH',
          'ExpressionLine',
          'INDENT',
          'Whens',
          'ELSE',
          'Block',
          'OUTDENT'
        ],
        id: 355,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Switch',
        handle: [ 'SWITCH', 'INDENT', 'Whens', 'OUTDENT' ],
        id: 356,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Switch',
        handle: [ 'SWITCH', 'INDENT', 'Whens', 'ELSE', 'Block', 'OUTDENT' ],
        id: 357,
        nullable: false,
        first: [],
        precedence: 6
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Whens: Nonterminal {
    symbol: 'Whens',
    productions: [
      Production {
        symbol: 'Whens',
        handle: [ 'When' ],
        id: 358,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'Whens',
        handle: [ 'Whens', 'When' ],
        id: 359,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  When: Nonterminal {
    symbol: 'When',
    productions: [
      Production {
        symbol: 'When',
        handle: [ 'LEADING_WHEN', 'SimpleArgs', 'Block' ],
        id: 360,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'When',
        handle: [ 'LEADING_WHEN', 'SimpleArgs', 'Block', 'TERMINATOR' ],
        id: 361,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  IfBlock: Nonterminal {
    symbol: 'IfBlock',
    productions: [
      Production {
        symbol: 'IfBlock',
        handle: [ 'IF', 'Expression', 'Block' ],
        id: 362,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'IfBlock',
        handle: [ 'IfBlock', 'ELSE', 'IF', 'Expression', 'Block' ],
        id: 363,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  If: Nonterminal {
    symbol: 'If',
    productions: [
      Production {
        symbol: 'If',
        handle: [ 'IfBlock' ],
        id: 364,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'If',
        handle: [ 'IfBlock', 'ELSE', 'Block' ],
        id: 365,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'If',
        handle: [ 'Statement', 'POST_IF', 'Expression' ],
        id: 366,
        nullable: false,
        first: [],
        precedence: 1
      },
      Production {
        symbol: 'If',
        handle: [ 'Expression', 'POST_IF', 'Expression' ],
        id: 367,
        nullable: false,
        first: [],
        precedence: 1
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  IfBlockLine: Nonterminal {
    symbol: 'IfBlockLine',
    productions: [
      Production {
        symbol: 'IfBlockLine',
        handle: [ 'IF', 'ExpressionLine', 'Block' ],
        id: 368,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'IfBlockLine',
        handle: [ 'IfBlockLine', 'ELSE', 'IF', 'ExpressionLine', 'Block' ],
        id: 369,
        nullable: false,
        first: [],
        precedence: 2
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  IfLine: Nonterminal {
    symbol: 'IfLine',
    productions: [
      Production {
        symbol: 'IfLine',
        handle: [ 'IfBlockLine' ],
        id: 370,
        nullable: false,
        first: [],
        precedence: 0
      },
      Production {
        symbol: 'IfLine',
        handle: [ 'IfBlockLine', 'ELSE', 'Block' ],
        id: 371,
        nullable: false,
        first: [],
        precedence: 2
      },
      Production {
        symbol: 'IfLine',
        handle: [ 'Statement', 'POST_IF', 'ExpressionLine' ],
        id: 372,
        nullable: false,
        first: [],
        precedence: 1
      },
      Production {
        symbol: 'IfLine',
        handle: [ 'Expression', 'POST_IF', 'ExpressionLine' ],
        id: 373,
        nullable: false,
        first: [],
        precedence: 1
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  OperationLine: Nonterminal {
    symbol: 'OperationLine',
    productions: [
      Production {
        symbol: 'OperationLine',
        handle: [ 'UNARY', 'ExpressionLine' ],
        id: 374,
        nullable: false,
        first: [],
        precedence: 21
      },
      Production {
        symbol: 'OperationLine',
        handle: [ 'DO', 'ExpressionLine' ],
        id: 375,
        nullable: false,
        first: [],
        precedence: 21
      },
      Production {
        symbol: 'OperationLine',
        handle: [ 'DO_IIFE', 'CodeLine' ],
        id: 376,
        nullable: false,
        first: [],
        precedence: 26
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  Operation: Nonterminal {
    symbol: 'Operation',
    productions: [
      Production {
        symbol: 'Operation',
        handle: [ 'UNARY', 'Expression' ],
        id: 377,
        nullable: false,
        first: [],
        precedence: 21
      },
      Production {
        symbol: 'Operation',
        handle: [ 'DO', 'Expression' ],
        id: 378,
        nullable: false,
        first: [],
        precedence: 21
      },
      Production {
        symbol: 'Operation',
        handle: [ 'UNARY_MATH', 'Expression' ],
        id: 379,
        nullable: false,
        first: [],
        precedence: 18
      },
      Production {
        symbol: 'Operation',
        handle: [ '-', 'Expression' ],
        id: 380,
        nullable: false,
        first: [],
        precedence: 18
      },
      Production {
        symbol: 'Operation',
        handle: [ '+', 'Expression' ],
        id: 381,
        nullable: false,
        first: [],
        precedence: 18
      },
      Production {
        symbol: 'Operation',
        handle: [ 'AWAIT', 'Expression' ],
        id: 382,
        nullable: false,
        first: [],
        precedence: 20
      },
      Production {
        symbol: 'Operation',
        handle: [ 'AWAIT', 'INDENT', 'Object', 'OUTDENT' ],
        id: 383,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Operation',
        handle: [ '--', 'SimpleAssignable' ],
        id: 384,
        nullable: false,
        first: [],
        precedence: 23
      },
      Production {
        symbol: 'Operation',
        handle: [ '++', 'SimpleAssignable' ],
        id: 385,
        nullable: false,
        first: [],
        precedence: 23
      },
      Production {
        symbol: 'Operation',
        handle: [ 'SimpleAssignable', '--' ],
        id: 386,
        nullable: false,
        first: [],
        precedence: 23
      },
      Production {
        symbol: 'Operation',
        handle: [ 'SimpleAssignable', '++' ],
        id: 387,
        nullable: false,
        first: [],
        precedence: 23
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '?' ],
        id: 388,
        nullable: false,
        first: [],
        precedence: 22
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '+', 'Expression' ],
        id: 389,
        nullable: false,
        first: [],
        precedence: 16
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '-', 'Expression' ],
        id: 390,
        nullable: false,
        first: [],
        precedence: 16
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', 'MATH', 'Expression' ],
        id: 391,
        nullable: false,
        first: [],
        precedence: 17
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '**', 'Expression' ],
        id: 392,
        nullable: false,
        first: [],
        precedence: 19
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', 'SHIFT', 'Expression' ],
        id: 393,
        nullable: false,
        first: [],
        precedence: 15
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', 'COMPARE', 'Expression' ],
        id: 394,
        nullable: false,
        first: [],
        precedence: 13
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '&', 'Expression' ],
        id: 395,
        nullable: false,
        first: [],
        precedence: 12
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '^', 'Expression' ],
        id: 396,
        nullable: false,
        first: [],
        precedence: 11
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '|', 'Expression' ],
        id: 397,
        nullable: false,
        first: [],
        precedence: 10
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '&&', 'Expression' ],
        id: 398,
        nullable: false,
        first: [],
        precedence: 9
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', '||', 'Expression' ],
        id: 399,
        nullable: false,
        first: [],
        precedence: 8
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', 'BIN?', 'Expression' ],
        id: 400,
        nullable: false,
        first: [],
        precedence: 7
      },
      Production {
        symbol: 'Operation',
        handle: [ 'Expression', 'RELATION', 'Expression' ],
        id: 401,
        nullable: false,
        first: [],
        precedence: 14
      },
      Production {
        symbol: 'Operation',
        handle: [ 'SimpleAssignable', 'COMPOUND_ASSIGN', 'Expression' ],
        id: 402,
        nullable: false,
        first: [],
        precedence: 4
      },
      Production {
        symbol: 'Operation',
        handle: [
          'SimpleAssignable',
          'COMPOUND_ASSIGN',
          'INDENT',
          'Expression',
          'OUTDENT'
        ],
        id: 403,
        nullable: false,
        first: [],
        precedence: 6
      },
      Production {
        symbol: 'Operation',
        handle: [
          'SimpleAssignable',
          'COMPOUND_ASSIGN',
          'TERMINATOR',
          'Expression'
        ],
        id: 404,
        nullable: false,
        first: [],
        precedence: 4
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  DoIife: Nonterminal {
    symbol: 'DoIife',
    productions: [
      Production {
        symbol: 'DoIife',
        handle: [ 'DO_IIFE', 'Code' ],
        id: 405,
        nullable: false,
        first: [],
        precedence: 26
      }
    ],
    first: [],
    follows: [],
    nullable: false
  },
  '$accept': Nonterminal {
    symbol: '$accept',
    productions: [
      Production {
        symbol: '$accept',
        handle: [ 'Root', '$end' ],
        id: 0,
        nullable: false,
        first: [],
        precedence: 0
      }
    ],
    first: [],
    follows: [],
    nullable: false
  }
}
